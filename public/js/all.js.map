{"version":3,"sources":["2.js","miao.js","try.js"],"names":["QT","console","log","PP","gg","FF","GK","http","require","createServer","request","response","url","writeHead","write","end","listen","process","env","PORT","newFn","pro"],"mappings":";;AAAA,IAAIA,EAAE,GAAG,SAALA,EAAK,GAAI;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,CAFD;;AAIA,IAAIC,EAAE,GAAG;AACPC,EAAAA,EAAE,EAAC,EADI;AAEPC,EAAAA,EAAE,EAAC,MAFI;AAGPC,EAAAA,EAAE,EAAC;AAHI,CAAT;AAMAN,EAAE;;;ACVF;AACA,IAAIO,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB,C,CAGA;;;AAGAD,IAAI,CAACE,YAAL,CAAkB,UAASC,OAAT,EAAkBC,QAAlB,EAA4B;AAC5CV,EAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAO,CAACE,GAApB,EAD4C,CAE5C;;AACA,MAAGF,OAAO,CAACE,GAAR,IAAe,GAAlB,EAAsB;AACxB;AACI;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAS,IAAAA,QAAQ,CAACE,SAAT,CAAmB,GAAnB,EAAwB;AAAC,sBAAgB;AAAjB,KAAxB;AACAF,IAAAA,QAAQ,CAACG,KAAT,CAAe,gBAAf;AACAH,IAAAA,QAAQ,CAACI,GAAT;AACD,GAPD,MAOM,IAAGL,OAAO,CAACE,GAAR,IAAe,QAAlB,EAA2B;AAC9BX,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACDS,IAAAA,QAAQ,CAACE,SAAT,CAAmB,GAAnB,EAAwB;AAAC,sBAAgB;AAAjB,KAAxB;AACAF,IAAAA,QAAQ,CAACG,KAAT,CAAe,qCAAf;AACAH,IAAAA,QAAQ,CAACG,KAAT,CAAe,gBAAf;AACAH,IAAAA,QAAQ,CAACI,GAAT;AACD,GANK,MAMA,IAAGL,OAAO,CAACE,GAAR,IAAe,SAAlB,EAA4B;AAC/BX,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACDS,IAAAA,QAAQ,CAACE,SAAT,CAAmB,GAAnB,EAAwB;AAAC,sBAAgB;AAAjB,KAAxB;AACAF,IAAAA,QAAQ,CAACG,KAAT,CAAe,iBAAf;AACAH,IAAAA,QAAQ,CAACI,GAAT;AACD,GALK,MAKD;AACHJ,IAAAA,QAAQ,CAACE,SAAT,CAAmB,GAAnB,EAAwB;AAAC,sBAAgB;AAAjB,KAAxB;AACAF,IAAAA,QAAQ,CAACG,KAAT,CAAe,qCAAf;AACAH,IAAAA,QAAQ,CAACG,KAAT,CAAe,cAAf;AACAH,IAAAA,QAAQ,CAACI,GAAT;AACD;AAEF,CA5BD,EA4BGC,MA5BH,CA4BUC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAmB,IA5B7B;AA6BAlB,OAAO,CAACC,GAAR,CAAY,sBAAZ;;;ACpCA,IAAIkB,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChBnB,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,CAFD;;AAIA,IAAMmB,GAAG,GAAG,EAAZ;AAEAD,KAAK","file":"all.js","sourcesContent":["let QT = ()=>{\r\n  console.log('33');\r\n}\r\n\r\nlet PP = {\r\n  gg:88,\r\n  FF:'tifa',\r\n  GK:'beer'\r\n}\r\n\r\nQT();","// setInterval(function() { console.log(\"hello\"); }, 1000);\r\nvar http = require(\"http\");\r\n\r\n\r\n//  node.js 載入模組\r\n\r\n\r\nhttp.createServer(function(request, response) {\r\n  console.log(request.url);\r\n  // response.write(\"<head><meta charset='UTF-8'></head>\");\r\n  if(request.url == '/'){\r\n// 路由\r\n    // 資料庫\r\n    console.log(\"接收到網頁請求！\");\r\n    response.writeHead(200, {\"Content-Type\": \"text/HTML\"});\r\n    response.write(\"<h1>index</h1>\");\r\n    response.end();\r\n  }else if(request.url == '/index'){\r\n     console.log(\"接收到網頁請求！\");\r\n    response.writeHead(200, {\"Content-Type\": \"text/HTML\"});\r\n    response.write(\"<head><meta charset='UTF-8'></head>\");\r\n    response.write(\"<h1>進主頁啦！</h1>\");\r\n    response.end();\r\n  }else if(request.url == '/search'){\r\n     console.log(\"接收到網頁請求！\");\r\n    response.writeHead(200, {\"Content-Type\": \"text/HTML\"});\r\n    response.write(\"<h1>search</h1>\");\r\n    response.end();\r\n  }else{\r\n    response.writeHead(200, {\"Content-Type\": \"text/HTML\"});\r\n    response.write(\"<head><meta charset='UTF-8'></head>\");\r\n    response.write(\"<h1>好興奮</h1>\");\r\n    response.end();\r\n  }\r\n  \r\n}).listen(process.env.PORT ||3000);\r\nconsole.log(\"Server已開啟port: 3000.\");\r\n\r\n","let newFn = () => {\r\n  console.log('s');\r\n}\r\n\r\nconst pro = 30;\r\n\r\nnewFn();"]}